#summary notations used in this project
= Notations =
== Voxel Neighbors ==
In the implementation of this project, the 3x3x3 neighborhood situation of a voxel is represented by a 32-bit integer whose lower 27 bits show whether the corresponding position is foreground (black) or background (white) by the bit '1' or '0', respectively.

The assignment of the neighboring points to the bit positions is as follows:

[http://simple-voxels.googlecode.com/svn/wiki/images/neighbor-bits.png]

== Implementation ==
A set of macro functions is defined to make an integer from the bit patterns of a 3x3x3 configuration:

{{{
    const int bits = BV( BP(0,0,0), BP(0,2,0), BP(0,0,0) );
}}}

where BV() and BP() macro names stand for "bit volume" and "bit plane", respectively.
The numbers in BP() represents the consecutive three bits of each line in the plane.

For example, the "bits" in the above represents the configuration
where the center voxel is the only voxel that is in the foreground (black, 1) while all the other voxels are in the background (white, 0).

The first BP() corresponds to the top plane in red,
and the second and the third BP() correspond to the mid and the bottom plane in green and blue, respectively.

For example, an integer defined as follows corresponds to the 3x3x3 configuration in the figure below, where the foreground voxels of the same color are on the same plane.
{{{
    const int bits = BV( BP(0,1,2), BP(3,4,5), BP(6,7,0) );
}}}

[http://simple-voxels.googlecode.com/svn/wiki/images/neighbor-hihumi.png]

Also, DumpBits() function can be used to print the configuration on the console.
{{{
    DumpBits( BV( BP(0,1,2), BP(3,4,5), BP(6,7,0) ) );
}}}
[http://simple-voxels.googlecode.com/svn/wiki/images/cout-neighbor-hihumi.png]


== Directions ==
[http://simple-voxels.googlecode.com/svn/wiki/images/6directions.png]