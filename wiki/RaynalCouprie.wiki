#summary Raynal and Couprie isthmus-based 6-subiteration thinning
= Introduction =
With the [http://code.google.com/p/simple-voxels/wiki/PalagyiKuba Palagyi and Kuba]'s deletable conditions being used for thinning implementation,
one finds that numerous spurious branches will be generated
along with object skeletons especially when the object size
is large such as 512x512x1024, which is however typical with medical imaging applications these days.

The spurious branches are generated partly due to
the topology preserving nature that
[http://code.google.com/p/simple-voxels/wiki/PalagyiKuba#Matching_Templates the matching templates]
are designed to keep end points of
linear structures.
In order to address this issue, Raynal and Couprie proposed an isthmus based 6-subiteration thinning algorithm [http://code.google.com/p/simple-voxels/wiki/Top#References [2]],
where the authors;
  # loosened Palagyi and Kuba's deletable conditions to further delete end points, too
  # instead prohibited removal of _isthmus_ points
The isthmus points were defined by:
  * The number of 26-adjacent foreground components is more than or equal to two.
The isthmus points are therefore critically connecting foreground components.
For example, the points on a curve are all isthmus except the end points.
By removing branches that do not contain isthmus points,
the spurious branches are expected to be reduced.

= Contribution =
As for the implementation of the isthmus point detection,
the authors used "look-up table in order to use pre-computation,
for each possible configuration of 26-neighborhood" (Section 4 [2]).

In order to allow more memory efficient implementation,
I tried to find matching templates for the isthmus detection.
In the latter of this page,
I will propose a set of 6 matching templates for the isthmus detection.

= Matching Templates for Deletable Voxels =
{{{
namespace NRaynal {

    const Mask Templates[7] = {
        Mask( BV( BP(7,7,7), BP(0,2,0), BP(0,2,0) ), BV( BP(0,0,0), BP(0,2,0), BP(0,2,0) ) ),   // M1'
        Mask( BV( BP(0,7,7), BP(2,2,0), BP(0,2,0) ), BV( BP(0,0,0), BP(2,2,0), BP(0,2,0) ) ),   // M2'
        Mask( BV( BP(0,3,3), BP(2,6,0), BP(0,2,0) ), BV( BP(0,0,0), BP(2,6,0), BP(0,2,0) ) ),   // M3'
        Mask( BV( BP(7,7,7), BP(4,2,0), BP(0,2,0) ), BV( BP(4,0,0), BP(4,2,0), BP(0,2,0) ) ),   // M4'
        Mask( BV( BP(7,7,7), BP(0,2,7), BP(2,2,7) ), BV( BP(0,0,0), BP(0,2,0), BP(2,0,0) ) ),   // M5'
        Mask( BV( BP(7,7,7), BP(0,3,3), BP(2,7,3) ), BV( BP(0,0,0), BP(0,2,0), BP(2,4,0) ) ),   // M6'
        Mask( BV( BP(7,7,7), BP(7,7,7), BP(7,7,7) ), BV( BP(0,0,0), BP(0,2,0), BP(0,0,1) ) ),   // M7'
    };
}
}}}

[http://simple-voxels.googlecode.com/svn/wiki/images/raynal-templates.png]

[http://simple-voxels.googlecode.com/svn/wiki/images/raynal-stat.png]

[http://simple-voxels.googlecode.com/svn/wiki/images/raynal-palagyi.png]

= Matching Templates for Isthmus Points =
[http://simple-voxels.googlecode.com/svn/wiki/images/isthmus-masks.png]
{{{
namespace NIsthmus {

    const Mask Templates[6] = {
        Mask( BV( BP(0,0,0), BP(7,5,7), BP(0,0,0) ), 0, BV( BP(7,7,7), BP(0,0,0), BP(0,0,0) ), BV( BP(0,0,0), BP(0,0,0), BP(7,7,7) ) ),
        Mask( BV( BP(0,7,0), BP(7,5,0), BP(0,0,0) ), 0, BV( BP(7,0,0), BP(0,0,0), BP(0,0,0) ), BV( BP(0,0,7), BP(0,0,7), BP(7,7,7) ) ),
        Mask( BV( BP(2,6,0), BP(6,4,0), BP(0,0,0) ), 0, BV( BP(4,0,0), BP(0,0,0), BP(0,0,0) ), BV( BP(1,1,7), BP(1,1,7), BP(7,7,7) ) ),
        Mask( BV( BP(2,6,0), BP(3,5,7), BP(0,0,0) ), 0, BV( BP(4,0,0), BP(4,0,0), BP(7,7,7) ), BV( BP(1,1,7), BP(0,0,0), BP(0,0,0) ) ),
        Mask( BV( BP(2,6,0), BP(3,5,6), BP(0,3,2) ), 0, BV( BP(4,0,0), BP(4,0,0), BP(7,4,4) ), BV( BP(1,1,7), BP(0,0,1), BP(0,0,1) ) ),
        Mask( BV( BP(2,6,0), BP(2,5,7), BP(2,3,0) ), 0, BV( BP(4,0,0), BP(4,0,0), BP(4,4,7) ), BV( BP(1,1,7), BP(1,0,0), BP(1,0,0) ) ),
    };
}
}}}


[http://simple-voxels.googlecode.com/svn/wiki/images/isthmus-templates.png]

[http://simple-voxels.googlecode.com/svn/wiki/images/isthmus-stat.png]