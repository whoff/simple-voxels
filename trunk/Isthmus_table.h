#include "stdafx.h"

#include "Mask.h"

const Mask isthmus_table[63] = {
    // M1
    Mask( 0x003de00, 0, 0x00001ff, 0x7fc0000 ),
    Mask( 0x0e05038, 0, 0x01c0e07, 0x70381c0 ),
    Mask( 0x2490492, 0, 0x1249249, 0x4924924 ),
    // M2
    Mask( 0x0005e38, 0, 0x0000007, 0x7ff81c0 ),
    Mask( 0x0034c92, 0, 0x0000124, 0x7fc9249 ),
    Mask( 0x003d038, 0, 0x00001c0, 0x7fc0e07 ),
    Mask( 0x0019692, 0, 0x0000049, 0x7fe4924 ),
    Mask( 0x0e3d000, 0, 0x7000000, 0x01c0fff ),
    Mask( 0x24b4c00, 0, 0x4900000, 0x12493ff ),
    Mask( 0x0e05e00, 0, 0x01c0000, 0x70381ff ),
    Mask( 0x2499600, 0, 0x1240000, 0x49249ff ),
    Mask( 0x0c84432, 0, 0x0100804, 0x72793c9 ),
    Mask( 0x068141a, 0, 0x0040201, 0x793c9e4 ),
    Mask( 0x2c140b0, 0, 0x4020100, 0x13c9e4f ),
    Mask( 0x2611098, 0, 0x1008040, 0x49e4f27 ),
    // M3
    Mask( 0x0004c32, 0, 0x0000004, 0x7ff93c9 ),
    Mask( 0x000161a, 0, 0x0000001, 0x7ffc9e4 ),
    Mask( 0x00340b0, 0, 0x0000100, 0x7fc9e4f ),
    Mask( 0x0019098, 0, 0x0000040, 0x7fe4f27 ),
    Mask( 0x2c34000, 0, 0x4000000, 0x13c9fff ),
    Mask( 0x2619000, 0, 0x1000000, 0x49e4fff ),
    Mask( 0x0c84c00, 0, 0x0100000, 0x72793ff ),
    Mask( 0x0681600, 0, 0x0040000, 0x793c9ff ),
    // M4
    Mask( 0x003d632, 0, 0x7fc0804, 0x00001c9 ),
    Mask( 0x003dc1a, 0, 0x7fc0201, 0x00001e4 ),
    Mask( 0x001deb0, 0, 0x7fe0100, 0x000004f ),
    Mask( 0x0035e98, 0, 0x7fc8040, 0x0000127 ),
    Mask( 0x2c1de00, 0, 0x40201ff, 0x13c0000 ),
    Mask( 0x2635e00, 0, 0x10081ff, 0x49c0000 ),
    Mask( 0x0cbd600, 0, 0x01009ff, 0x7240000 ),
    Mask( 0x06bdc00, 0, 0x00403ff, 0x7900000 ),
    Mask( 0x0685c38, 0, 0x79381c0, 0x0040207 ),
    Mask( 0x0c85638, 0, 0x72781c0, 0x0100807 ),
    Mask( 0x0e05c1a, 0, 0x70381e4, 0x01c0201 ),
    Mask( 0x0e05632, 0, 0x70381c9, 0x01c0804 ),
    Mask( 0x0e35098, 0, 0x01c0f27, 0x7008040 ),
    Mask( 0x0e1d0b0, 0, 0x01c0e4f, 0x7020100 ),
    Mask( 0x2635038, 0, 0x49c0e07, 0x10081c0 ),
    Mask( 0x2c1d038, 0, 0x13c0e07, 0x40201c0 ),
    Mask( 0x2491698, 0, 0x4924927, 0x1248040 ),
    Mask( 0x2611692, 0, 0x49e4924, 0x1008049 ),
    Mask( 0x249941a, 0, 0x49249e4, 0x1240201 ),
    Mask( 0x0699492, 0, 0x7924924, 0x0040249 ),
    Mask( 0x2c14c92, 0, 0x13c9249, 0x4020124 ),
    Mask( 0x2494cb0, 0, 0x124924f, 0x4920100 ),
    Mask( 0x0cb4492, 0, 0x7249249, 0x0100924 ),
    Mask( 0x24b4432, 0, 0x12493c9, 0x4900804 ),
    // M5
    Mask( 0x2635632, 0, 0x49c0804, 0x10081c9 ),
    Mask( 0x2c1dc1a, 0, 0x13c0201, 0x40201e4 ),
    Mask( 0x069dcb0, 0, 0x7920100, 0x004024f ),
    Mask( 0x0cb5698, 0, 0x7248040, 0x0100927 ),
    // M6
    Mask( 0x06bd432, 0, 0x7900804, 0x00403c9 ),
    Mask( 0x0cbd41a, 0, 0x7240201, 0x01009e4 ),
    Mask( 0x0c9d6b0, 0, 0x7260100, 0x010084f ),
    Mask( 0x2c1d632, 0, 0x13c0804, 0x40201c9 ),
    Mask( 0x2c15e98, 0, 0x13c8040, 0x4020127 ),
    Mask( 0x2615eb0, 0, 0x49e0100, 0x100804f ),
    Mask( 0x2635c1a, 0, 0x49c0201, 0x10081e4 ),
    Mask( 0x06b5c98, 0, 0x7908040, 0x0040327 ),
    Mask( 0x249dc38, 0, 0x49201c0, 0x1240207 ),
    Mask( 0x24b5638, 0, 0x12481c0, 0x4900807 ),
    Mask( 0x0e35692, 0, 0x7008049, 0x01c0924 ),
    Mask( 0x0e1dc92, 0, 0x7020124, 0x01c0249 ),
};
